2025-09-22 13:52:36 - root - INFO - [logging_config.py:51] - Logging configurado. Arquivo: C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\logs\cadvision_20250922_135235.log
2025-09-22 13:52:36 - main - INFO - [main.py:55] - Iniciando aplicação CadVision API...
2025-09-22 13:52:36 - main - INFO - [main.py:55] - Iniciando aplicação CadVision API...
2025-09-22 13:52:36 - app.database - INFO - [database.py:172] - Banco de dados inicializado com sucesso (com novo schema).
2025-09-22 13:52:36 - main - INFO - [main.py:57] - Banco de dados inicializado com sucesso.
2025-09-22 13:52:36 - app.database - INFO - [database.py:172] - Banco de dados inicializado com sucesso (com novo schema).
2025-09-22 13:52:36 - main - INFO - [main.py:57] - Banco de dados inicializado com sucesso.
2025-09-22 13:55:15 - vision/identify - INFO - [logging_config.py:68] - EVENT: process_started - DATA: {'timestamp': '2025-09-22T13:55:15.138415', 'service': 'vision/identify', 'event': 'process_started', 'data': {'vertical': 'supermercado', 'filename': 'Imagem do WhatsApp de 2025-09-17 à(s) 18.48.26_20d1bdb5.jpg', 'content_type': 'image/jpeg'}}
2025-09-22 13:55:15 - vision/identify - INFO - [logging_config.py:68] - EVENT: image_loaded - DATA: {'timestamp': '2025-09-22T13:55:15.139398', 'service': 'vision/identify', 'event': 'image_loaded', 'data': {'size_bytes': 122489, 'hash': 'e909fe0f6cb4c1043e03c0e2d2763f0d'}}
2025-09-22 13:55:15 - vision/identify - INFO - [logging_config.py:68] - EVENT: vision_extraction_start - DATA: {'timestamp': '2025-09-22T13:55:15.140398', 'service': 'vision/identify', 'event': 'vision_extraction_start', 'data': {}}
2025-09-22 13:55:15 - app.services.vision_service - INFO - [vision_service.py:108] - Imagem aprimorada para OCR.
2025-09-22 13:55:18 - app.services.vision_service - INFO - [vision_service.py:181] - Vision API: Texto extraído (15 chars), Logos: 0, Labels: 5
2025-09-22 13:55:18 - app.services.vision_service - INFO - [vision_service.py:276] - Texto bruto: '7891340" 365576' -> Texto limpo para análise: '7891340365576'
2025-09-22 13:55:18 - app.services.vision_service - INFO - [vision_service.py:294] - GTIN validado com sucesso: 7891340365576
2025-09-22 13:55:18 - vision/identify - INFO - [logging_config.py:68] - EVENT: vision_extraction_complete - DATA: {'timestamp': '2025-09-22T13:55:18.946781', 'service': 'vision/identify', 'event': 'vision_extraction_complete', 'data': {'success': True, 'text_length': 15, 'logos_detected': 0, 'gtin_found': True}}
2025-09-22 13:55:18 - vision/identify - INFO - [logging_config.py:68] - EVENT: intelligent_analysis_start - DATA: {'timestamp': '2025-09-22T13:55:18.947780', 'service': 'vision/identify', 'event': 'intelligent_analysis_start', 'data': {'vertical': 'supermercado'}}
2025-09-22 13:55:18 - app.services.product_service - INFO - [product_service.py:58] - Iniciando Etapa 1 (Via Rápida) com GTIN: 7891340365576.
2025-09-22 13:55:20 - app.services.cosmos_service - INFO - [cosmos_service.py:72] - 📦 Dados formatados do Cosmos: {'gtin': '7891340365576', 'title': 'BISC LOOK WAFER 55G BRIGADEIRO', 'brand': '', 'category': 'Biscoito Wafer', 'ncm': '19053200', 'cest': '', 'confidence': 0.99, 'vertical': 'supermercado'}
2025-09-22 13:55:20 - app.services.product_service - INFO - [product_service.py:77] - Produto identificado: BISC LOOK WAFER 55G BRIGADEIRO
2025-09-22 13:55:20 - vision/identify - INFO - [logging_config.py:68] - EVENT: intelligent_analysis_complete - DATA: {'timestamp': '2025-09-22T13:55:20.347129', 'service': 'vision/identify', 'event': 'intelligent_analysis_complete', 'data': {'title': 'BISC LOOK WAFER 55G BRIGADEIRO', 'brand': '', 'category': 'Biscoito Wafer', 'confidence': 0.99}}
2025-09-22 13:55:20 - vision/identify - INFO - [logging_config.py:68] - EVENT: process_completed - DATA: {'timestamp': '2025-09-22T13:55:20.347129', 'service': 'vision/identify', 'event': 'process_completed', 'data': {'processing_time': 5.21, 'status': 'newly_identified', 'product_title': 'BISC LOOK WAFER 55G BRIGADEIRO'}}
2025-09-22 13:55:20 - main - ERROR - [main.py:572] - Erro não tratado na rota http://127.0.0.1:8000/api/v1/vision/identify: 1 validation errors:
  {'type': 'model_attributes_type', 'loc': ('response',), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': None}
Traceback (most recent call last):
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\middleware\errors.py", line 164, in __call__
    await self.app(scope, receive, _send)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\middleware\gzip.py", line 24, in __call__
    await responder(scope, receive, send)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\middleware\gzip.py", line 44, in __call__
    await self.app(scope, receive, self.send_with_gzip)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\middleware\cors.py", line 93, in __call__
    await self.simple_response(scope, receive, send, request_headers=headers)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\middleware\cors.py", line 148, in simple_response
    await self.app(scope, receive, send)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\middleware\exceptions.py", line 65, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 64, in wrapped_app
    raise exc
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\routing.py", line 756, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\routing.py", line 776, in app
    await route.handle(scope, receive, send)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\routing.py", line 297, in handle
    await self.app(scope, receive, send)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\routing.py", line 77, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 64, in wrapped_app
    raise exc
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\routing.py", line 72, in app
    response = await func(request)
               ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\fastapi\routing.py", line 296, in app
    content = await serialize_response(
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\fastapi\routing.py", line 155, in serialize_response
    raise ResponseValidationError(
fastapi.exceptions.ResponseValidationError: 1 validation errors:
  {'type': 'model_attributes_type', 'loc': ('response',), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': None}

2025-09-22 13:56:14 - vision/identify - INFO - [logging_config.py:68] - EVENT: process_started - DATA: {'timestamp': '2025-09-22T13:56:14.528875', 'service': 'vision/identify', 'event': 'process_started', 'data': {'vertical': 'supermercado', 'filename': 'fini.jpeg', 'content_type': 'image/jpeg'}}
2025-09-22 13:56:14 - vision/identify - INFO - [logging_config.py:68] - EVENT: image_loaded - DATA: {'timestamp': '2025-09-22T13:56:14.528875', 'service': 'vision/identify', 'event': 'image_loaded', 'data': {'size_bytes': 10923, 'hash': '0006153a382d1c187381397c2c10e0f7'}}
2025-09-22 13:56:14 - vision/identify - INFO - [logging_config.py:68] - EVENT: vision_extraction_start - DATA: {'timestamp': '2025-09-22T13:56:14.529875', 'service': 'vision/identify', 'event': 'vision_extraction_start', 'data': {}}
2025-09-22 13:56:14 - app.services.vision_service - INFO - [vision_service.py:108] - Imagem aprimorada para OCR.
2025-09-22 13:56:16 - app.services.vision_service - INFO - [vision_service.py:181] - Vision API: Texto extraído (21 chars), Logos: 0, Labels: 8
2025-09-22 13:56:16 - app.services.vision_service - INFO - [vision_service.py:276] - Texto bruto: 'Fini
Gelatinas
Beijos' -> Texto limpo para análise: ''
2025-09-22 13:56:16 - app.services.vision_service - WARNING - [vision_service.py:297] - Nenhum GTIN válido encontrado no texto limpo: ''
2025-09-22 13:56:16 - vision/identify - INFO - [logging_config.py:68] - EVENT: vision_extraction_complete - DATA: {'timestamp': '2025-09-22T13:56:16.464093', 'service': 'vision/identify', 'event': 'vision_extraction_complete', 'data': {'success': True, 'text_length': 21, 'logos_detected': 0, 'gtin_found': False}}
2025-09-22 13:56:16 - vision/identify - INFO - [logging_config.py:68] - EVENT: intelligent_analysis_start - DATA: {'timestamp': '2025-09-22T13:56:16.464093', 'service': 'vision/identify', 'event': 'intelligent_analysis_start', 'data': {'vertical': 'supermercado'}}
2025-09-22 13:56:16 - app.services.product_service - INFO - [product_service.py:64] - Etapa 1 falhou ou não aplicável. Iniciando Etapa 2 (Inferência da IA).
2025-09-22 13:56:18 - ai_service - INFO - [logging_config.py:68] - EVENT: json_parsed_successfully - DATA: {'timestamp': '2025-09-22T13:56:18.752932', 'service': 'ai_service', 'event': 'json_parsed_successfully', 'data': {'title_extracted': 'Fini Gelatinas Beijos', 'brand_extracted': 'Fini', 'category_extracted': 'Alimentos'}}
2025-09-22 13:56:18 - app.services.product_service - INFO - [product_service.py:77] - Produto identificado: Fini Gelatinas Beijos
2025-09-22 13:56:18 - app.services.product_service - INFO - [product_service.py:81] - Iniciando Etapa 3 (Enriquecimento com Busca na Web).
2025-09-22 13:56:18 - app.services.search_service - INFO - [search_service.py:30] - Buscando na web com a query: 'ean Fini Fini Gelatinas Beijos'
2025-09-22 13:56:20 - app.services.advanced_inference_service - INFO - [advanced_inference_service.py:90] - Extraindo GTIN do contexto de busca para 'Fini Gelatinas Beijos'
2025-09-22 13:56:21 - app.services.product_service - INFO - [product_service.py:94] - GTIN '7898279790875' extraído da busca. Validando...
2025-09-22 13:56:23 - app.services.cosmos_service - INFO - [cosmos_service.py:72] - 📦 Dados formatados do Cosmos: {'gtin': '7898279790875', 'title': 'BALA DE GELATINA FINI BEIJOS MORANGO', 'brand': 'FINI', 'category': '', 'ncm': '17049020', 'cest': '', 'confidence': 0.99, 'vertical': 'supermercado'}
2025-09-22 13:56:23 - app.services.product_service - INFO - [product_service.py:100] - Sucesso! Dados validados e enriquecidos pelo Cosmos via RAG.
2025-09-22 13:56:23 - vision/identify - INFO - [logging_config.py:68] - EVENT: intelligent_analysis_complete - DATA: {'timestamp': '2025-09-22T13:56:23.095159', 'service': 'vision/identify', 'event': 'intelligent_analysis_complete', 'data': {'title': 'BALA DE GELATINA FINI BEIJOS MORANGO', 'brand': 'FINI', 'category': 'Outros', 'confidence': 0.99}}
2025-09-22 13:56:23 - vision/identify - INFO - [logging_config.py:68] - EVENT: process_completed - DATA: {'timestamp': '2025-09-22T13:56:23.095159', 'service': 'vision/identify', 'event': 'process_completed', 'data': {'processing_time': 8.57, 'status': 'newly_identified', 'product_title': 'BALA DE GELATINA FINI BEIJOS MORANGO'}}
2025-09-22 13:56:23 - main - ERROR - [main.py:572] - Erro não tratado na rota http://127.0.0.1:8000/api/v1/vision/identify: 1 validation errors:
  {'type': 'model_attributes_type', 'loc': ('response',), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': None}
Traceback (most recent call last):
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\middleware\errors.py", line 164, in __call__
    await self.app(scope, receive, _send)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\middleware\gzip.py", line 24, in __call__
    await responder(scope, receive, send)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\middleware\gzip.py", line 44, in __call__
    await self.app(scope, receive, self.send_with_gzip)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\middleware\cors.py", line 93, in __call__
    await self.simple_response(scope, receive, send, request_headers=headers)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\middleware\cors.py", line 148, in simple_response
    await self.app(scope, receive, send)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\middleware\exceptions.py", line 65, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 64, in wrapped_app
    raise exc
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\routing.py", line 756, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\routing.py", line 776, in app
    await route.handle(scope, receive, send)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\routing.py", line 297, in handle
    await self.app(scope, receive, send)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\routing.py", line 77, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 64, in wrapped_app
    raise exc
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\starlette\routing.py", line 72, in app
    response = await func(request)
               ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\fastapi\routing.py", line 296, in app
    content = await serialize_response(
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pedro Diniz\Documents\CadVision\CadVision_app\backend\venv\Lib\site-packages\fastapi\routing.py", line 155, in serialize_response
    raise ResponseValidationError(
fastapi.exceptions.ResponseValidationError: 1 validation errors:
  {'type': 'model_attributes_type', 'loc': ('response',), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': None}

2025-09-22 13:56:43 - main - INFO - [main.py:59] - Encerrando aplicação CadVision API.
